{"version":3,"sources":["modules/SceneComponent.tsx","modules/MenuBar.tsx","modules/ImportFile.tsx","modules/Timeline.tsx","modules/Home.tsx","modules/position-reader.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SceneComponent","props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","renderChildrenWhenReady","onSceneReady","children","rest","useState","scene","sceneReady","sceneContext","setSceneContext","engine","canvas","engineContext","setEngineContext","useEffect","current","Engine","Scene","sceneIsReady","isReady","onReadyObservable","addOnce","runRenderLoop","activeCamera","render","console","warn","resize","getEngine","window","addEventListener","dispose","removeEventListener","ref","Provider","value","MenuBar","onImport","onReplay","Navbar","variant","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","homepage","version","onClick","ImportFile","show","onCancel","onSelect","Modal","size","onHide","Header","closeButton","Title","Body","Form","File","label","custom","onChange","ev","file","target","files","from","text","Footer","Button","SampleInterval","interpolateV3","p0","p1","alpha","subtract","scale","add","Timeline","path","episodes","_path","_episodes","this","t","interval","position","to","speed","fuel","status","Vector3","Zero","length","n","episode","find","e","begin","end","dt","j","Math","floor","idx","min","huds","timeline","WebContext","MoonTextureUrl","PlatformTextureUrl","SkyBoxUrl","RocketModelUrl","SampleUrl","PlatformRatio","Viewpoint","StatusDescr","StatusColor","time","camera","FollowCamera","radius","heightOffset","cameraAcceleration","maxCameraSpeed","createCamera1","camera2","UniversalCamera","attachControl","createCamera2","viewport","Viewport","activeCameras","push","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","undefined","text1","TextBlock","color","width","height","fontFamily","fontSize","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_TOP","textHorizontalAlignment","paddingLeftInPixels","addControl","advancedTexture1","text2","fontWeight","HORIZONTAL_ALIGNMENT_CENTER","VERTICAL_ALIGNMENT_BOTTOM","buildHud","light","HemisphericLight","intensity","buildLights","groundMat","StandardMaterial","diffuseTexture","Texture","ground","MeshBuilder","CreateGround","subdivisions","material","y","buildGround","platMat","platform","receiveShadows","buildPlatform","skybox","CreateBox","skyboxMaterial","backFaceCulling","reflectionTexture","CubeTexture","coordinatesMode","SKYBOX_MODE","diffuseColor","Color3","specularColor","buildSkybox","SceneLoader","ImportMesh","meshes","particles","skeletons","rocket","camera1","getCameraByName","name","lockedTarget","onRocketLoad","loadRocket","getMeshByName","dt1","getDeltaTime","d","sqrt","x","z","dirpn","atan2","PI","dir","round","vh","vdirpn","vdir","txt","sprintf","renderHud","positionVectors","obs","pipe","flatMap","split","filter","map","line","parseFloat","data","toArray","Home","state","importModalShown","ajax","url","responseType","response","importFile","setState","tap","onPathReady","err","onImportError","subscribe","ends","_","i","item","pts","concat","m","zip","take","drop","ary","createTimeline","error","Container","fluid","showImportPanel","onImportCancel","onImportFile","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c765a6a.chunk.js","sourcesContent":["import React, { useEffect, useContext, useRef, useState, FunctionComponent } from 'react';\nimport { Engine, Scene, Nullable, EngineOptions, SceneOptions, EventState, Observer, Camera } from '@babylonjs/core';\nimport { EngineCanvasContext, EngineCanvasContextType, SceneContext, SceneContextType } from 'babylonjs-hook';\nimport '../App.css';\n\nexport type BabylonjsProps = {\n    antialias?: boolean\n    engineOptions?: EngineOptions\n    adaptToDeviceRatio?: boolean\n    renderChildrenWhenReady?: boolean\n    sceneOptions?: SceneOptions\n    onSceneReady: (scene: Scene) => void\n    onRender?: (scene: Scene) => void\n    id: string\n    children?: React.ReactNode\n    width?: number;\n    height?: number;\n};\n\nexport type OnFrameRenderFn = (eventData: Scene, eventState: EventState) => void\n\n/**\n * Register a callback for before the scene renders.\n * \n * @param callback called using onBeforeRender functionality of scene\n * @param mask the mask used to filter observers\n * @param insertFirst if true will be inserted at first position, if false (default) will be last position.\n * @param callOnce only call the callback once\n */\nexport const useBeforeRender = (callback: OnFrameRenderFn, mask?: number, insertFirst?: boolean, callOnce?: boolean): void => {\n    const { scene } = useContext(SceneContext);\n\n    useEffect(() => {\n        if (scene === null) {\n            return;\n        }\n\n        const unregisterOnFirstCall: boolean = callOnce === true;\n        const sceneObserver: Nullable<Observer<Scene>> = scene.onBeforeRenderObservable.add(callback, mask, insertFirst, undefined, unregisterOnFirstCall);\n\n        if (unregisterOnFirstCall !== true) {\n            return () => {\n                scene.onBeforeRenderObservable.remove(sceneObserver);\n            }\n        }\n    })\n}\n\n/**\n * Register a callback for after the scene renders.\n * \n * @param callback called using onBeforeRender functionality of scene\n * @param mask the mask used to filter observers\n * @param insertFirst if true will be inserted at first position, if false (default) will be last position.\n * @param callOnce only call the callback once\n */\nexport const useAfterRender = (callback: OnFrameRenderFn, mask?: number, insertFirst?: boolean, callOnce?: boolean): void => {\n    const { scene } = useContext(SceneContext);\n\n    useEffect(() => {\n        if (scene === null) {\n            return;\n        }\n\n        const unregisterOnFirstCall: boolean = callOnce === true;\n        const sceneObserver: Nullable<Observer<Scene>> = scene.onAfterRenderObservable.add(callback, mask, insertFirst, undefined, unregisterOnFirstCall);\n\n        if (unregisterOnFirstCall !== true) {\n            return () => {\n                scene.onAfterRenderObservable.remove(sceneObserver);\n            }\n        }\n    })\n}\n\n/**\n * Handles creating a camera and attaching/disposing.\n * TODO: add new 4.2 parameters: useCtrlForPanning & panningMouseButton\n * @param createCameraFn function that creates and returns a camera\n * @param autoAttach Attach the input controls (default true)\n * @param noPreventDefault Events caught by controls should call prevent default\n */\nexport const useCamera = <T extends Camera>(createCameraFn: (scene: Scene) => T, autoAttach: boolean = true, noPreventDefault: boolean = true): Nullable<T> => {\n    const { scene } = useContext(SceneContext);\n    const cameraRef = useRef<Nullable<T>>(null);\n\n    useEffect(() => {\n        if (scene === null) {\n            console.warn('cannot create camera (scene not ready)');\n            return;\n        }\n\n        const camera = createCameraFn(scene);\n        if (autoAttach === true) {\n            const canvas: HTMLCanvasElement = scene.getEngine()!.getRenderingCanvas()!;\n\n            // This attaches the camera to the canvas\n            // https://github.com/BabylonJS/Babylon.js/pull/9192 (keep canvas to work with < 4.2 beta-13)\n            (camera as any).attachControl(canvas, noPreventDefault);\n        }\n        cameraRef.current = camera;\n\n        return () => {\n            if (autoAttach === true) {\n                const canvas: HTMLCanvasElement = scene.getEngine()!.getRenderingCanvas()!;\n                (camera as any).detachControl(canvas);\n            }\n            camera.dispose();\n        }\n    }, [scene, autoAttach, createCameraFn, noPreventDefault]);\n\n    return cameraRef.current;\n}\n\nexport const SceneComponent: FunctionComponent<BabylonjsProps> = props => {\n    const reactCanvas = useRef<Nullable<HTMLCanvasElement>>(null);\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, renderChildrenWhenReady, children, ...rest } = props;\n\n    const [sceneContext, setSceneContext] = useState<SceneContextType>({\n        scene: null,\n        sceneReady: false\n    });\n\n    const [engineContext, setEngineContext] = useState<EngineCanvasContextType>({\n        engine: null,\n        canvas: null\n    });\n\n    useEffect(() => {\n        if (reactCanvas.current) {\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\n            setEngineContext(() => ({\n                engine,\n                canvas: reactCanvas.current\n            }));\n\n            const scene = new Scene(engine, sceneOptions);\n            const sceneIsReady = scene.isReady();\n            if (sceneIsReady) {\n                props.onSceneReady(scene);\n            } else {\n                scene.onReadyObservable.addOnce((scene) => {\n                    props.onSceneReady(scene);\n                    setSceneContext(() => ({\n                        canvas: reactCanvas.current,\n                        scene,\n                        engine,\n                        sceneReady: true,\n                    }));\n                });\n            }\n\n            engine.runRenderLoop(() => {\n                if (scene.activeCamera) {\n                    if (typeof onRender === 'function') {\n                        onRender(scene);\n                    }\n                    scene.render();\n                } else {\n                    // @babylonjs/core throws an error if you attempt to render with no active camera.\n                    // if we attach as a child React component we have frames with no active camera.\n                    console.warn('no active camera..');\n                }\n            })\n\n            const resize = () => {\n                scene.getEngine().resize();\n            }\n\n            if (window) {\n                window.addEventListener('resize', resize);\n            }\n\n            setSceneContext(() => ({\n                canvas: reactCanvas.current,\n                scene,\n                engine,\n                sceneReady: sceneIsReady,\n            }));\n\n            return () => {\n                scene.getEngine().dispose();\n\n                if (window) {\n                    window.removeEventListener('resize', resize);\n                }\n            }\n        }\n    }, [reactCanvas, adaptToDeviceRatio, antialias, engineOptions, onRender, props, sceneOptions]);\n\n    return (\n        <>\n            <canvas ref={reactCanvas} {...rest} />\n            <EngineCanvasContext.Provider value={engineContext}>\n                <SceneContext.Provider value={sceneContext}>\n                    {(renderChildrenWhenReady !== true || (renderChildrenWhenReady === true && sceneContext.sceneReady)) &&\n                        children\n                    }\n                </SceneContext.Provider>\n            </EngineCanvasContext.Provider>\n        </>\n    );\n}","import React, { FunctionComponent } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport {version, homepage} from '../../package.json';\n\n/**\n * \n */\nexport const MenuBar: FunctionComponent<Readonly<{\n  onImport?: () => void;\n  onReplay?: () => void;\n}>> = ({ onImport, onReplay }) => {\n  return (\n    <Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\" >\n      <Navbar.Brand href=\"http://www.mmarini.org\">www.mmarini.org</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbar-nav\" />\n      <Navbar.Collapse id=\"navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href={homepage}>Rocket {version}</Nav.Link>\n          <Nav.Link onClick={() => { if (onImport) { onImport(); } }}>\n            Import\n          </Nav.Link>\n          <Nav.Link onClick={() => { if (onReplay) { onReplay(); } }}>\n            Replay\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React, { FunctionComponent } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { from, Observable } from 'rxjs';\n\ninterface ImportFileProps {\n  show: boolean;\n  onCancel?: () => void\n  onSelect?: (arg: Observable<string>) => void;\n};\n\n/**\n * \n */\nexport const ImportFile: FunctionComponent<ImportFileProps> = ({ show, onCancel, onSelect }) => {\n\n  function onFileChange(file: Blob) {\n    if (onSelect) {\n      onSelect(from(file.text()));\n    }\n  }\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={() => { if (onCancel) { onCancel(); } }}>\n      <Modal.Header closeButton>\n        <Modal.Title>Import definitions from file ?</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>The definitions will be imported from the selected file.</p>\n        <Form>\n          <Form.File\n            label=\"Import file\"\n            custom\n            onChange={(ev: any) => onFileChange(ev.target.files[0])}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={() => { if (onCancel) { onCancel(); } }}>Cancel</Button>\n      </Modal.Footer>\n    </Modal >\n  );\n}\n","import { Vector3 } from \"@babylonjs/core\";\nimport _ from 'lodash';\n\nconst SampleInterval = 0.25;\nconst AlertDuration = 5;\nconst Flying = 0;\n\nexport interface Status {\n    position: Vector3;\n    speed: Vector3;\n    fuel: number;\n    status: number;\n}\n\ninterface Episode {\n    from: number;\n    to: number;\n    begin: number;\n    end: number;\n}\n\n/**\n * \n * @param p0 \n * @param p1 \n * @param alpha \n * @returns \n */\nfunction interpolateV3(p0: Vector3, p1: Vector3, alpha: number) {\n    const p01 = p1.subtract(p0);\n    const p = p01.scale(alpha).add(p0);\n    return p;\n}\n\n/**\n * \n */\nexport class Timeline {\n    private _path: Status[];\n    private _episodes: Episode[];\n\n    constructor(path: Status[], episodes: Episode[]) {\n        this._path = path;\n        this._episodes = episodes;\n    }\n\n    get sampleInterval() { return SampleInterval; }\n\n    get path() { return this._path; }\n\n    /**\n     * \n     * @param t \n     * @returns \n     */\n    status(t: number): Status {\n        const interval = this.interval(t);\n        return !interval\n            ? {\n                position: Vector3.Zero(),\n                speed: Vector3.Zero(),\n                fuel: 0,\n                status: 0,\n            }\n            : {\n                position: interpolateV3(interval.from.position, interval.to.position, interval.alpha),\n                speed: interpolateV3(interval.from.speed, interval.to.speed, interval.alpha),\n                fuel: (interval.to.fuel - interval.from.fuel) * interval.alpha + interval.from.fuel,\n                status: interval.from.status\n            };\n    }\n\n\n    /**\n     * \n     * @param t \n     * @returns\n     */\n    private interval(t: number) {\n        if (t < 0) {\n        }\n        const { path, _episodes: episodes } = this;\n        if (episodes.length === 0) {\n            return undefined;\n        }\n        const n = path.length;\n        const episode = episodes.find(e => t >= e.begin && t < e.end)\n            || episodes[episodes.length - 1];\n        if (!episode) {\n            return { from: path[n - 1], to: path[n - 1], alpha: 0 };\n        }\n        const dt = t - episode.begin;\n        const j = Math.floor(dt / SampleInterval);\n        const idx = Math.min(episode.from + j, episode.to);\n        return idx === episode.to\n            ? { from: path[idx], to: path[idx], alpha: 0 }\n            : { from: path[idx], to: path[idx + 1], alpha: (dt - j * SampleInterval) / SampleInterval };\n    }\n}\n\n/**\n * \n * @param status \n * @returns \n */\nexport function createTimeline(status: Status[]) {\n    const n = status.length;\n    const ends = _(status)\n        .map((status, i) => { return { status, i }; })\n        .filter(item => item.status.status !== Flying)\n        .map('i')\n        .value();\n    const pts = (status[n - 1].status !== Flying)\n        ? _.concat([0], ends)\n        : _.concat([0], ends, [n - 1]);\n    const m = pts.length;\n    const episodes = _.zip(_.take(pts, m - 1), _.drop(pts, 1)).map((ary, i) => {\n        const from = ary[0] || 0;\n        const to = ary[1] || 0;\n        const begin = from * SampleInterval + i * AlertDuration;\n        const end = to * SampleInterval + (i + 1) * AlertDuration;\n        return { from, to, begin, end };\n    });\n\n    return new Timeline(status, episodes);\n}\n","import {\n    Scene, HemisphericLight, MeshBuilder, Vector3, StandardMaterial, Texture,\n    CubeTexture, Color3, FollowCamera, UniversalCamera, Viewport, SceneLoader,\n    AbstractMesh, Skeleton, IParticleSystem\n} from \"@babylonjs/core\";\nimport { Container } from \"react-bootstrap\";\nimport { SceneComponent } from \"./SceneComponent\";\nimport '@babylonjs/loaders';\nimport { AdvancedDynamicTexture, TextBlock, Control } from 'babylonjs-gui';\nimport { MenuBar } from \"./MenuBar\";\nimport { Component } from \"react\";\nimport { ImportFile } from \"./ImportFile\";\nimport { homepage } from '../../package.json';\nimport { filter, map, tap, toArray } from 'rxjs/operators';\nimport { Observable } from \"rxjs\";\nimport { ajax } from 'rxjs/ajax';\nimport { csv, lines } from \"./position-reader\";\nimport { sprintf } from 'sprintf-js';\nimport { createTimeline, Status, Timeline } from \"./Timeline\";\n\nconst WebContext = homepage;\nconst MoonTextureUrl = `/${WebContext}/texture/moon.jpg`;\nconst PlatformTextureUrl = `/${WebContext}/texture/platform.jpg`;\nconst SkyBoxUrl = `/${WebContext}/texture/skybox`;\nconst RocketModelUrl = `/${WebContext}/objs/`;\nconst RocketFile = 'rocket.gltf';\nconst SampleUrl = `/${WebContext}/sample.csv`;\nconst PlatformRatio = 480 / 360;\nconst PlatformSize = 20;\nconst Viewpoint = new Vector3(-20, 1.7, 40);\n\nconst StatusDescr = [\n    'Flying',\n    'Landed',\n    'Landed Out Of Platform',\n    'Crashed On Platform',\n    'Crashed Out Of Platform',\n    'Crashed On Platform',\n    'Crashed Out Of Platform',\n    'Out Of Range',\n    'Out Of Fuel'\n];\n\nconst StatusColor = [\n    'white',\n    '#00ff00',\n    '#d80000',\n    '#d80000',\n    '#d80000',\n    '#d80000',\n    '#d80000',\n    '#d80000',\n    '#d80000',\n    '#d80000'\n];\n\nvar huds: TextBlock[] | undefined;\n\nvar time = 0;\nvar timeline: Timeline | undefined;\n\n/**\n * \n * @param scene \n */\nfunction createCamera1(scene: Scene) {\n    const camera = new FollowCamera(\"camera1\", Viewpoint, scene);\n    camera.radius = 45;\n    camera.heightOffset = 1.7;\n    camera.cameraAcceleration = 0.01;\n    camera.maxCameraSpeed = 200 / 3.6;\n    return camera;\n}\n\n/**\n * \n * @param scene \n */\nfunction createCamera2(scene: Scene) {\n    const camera = new UniversalCamera('camera2', Viewpoint, scene);\n    camera.attachControl(true);\n    return camera;\n}\n\n/**\n * \n * @param scene \n */\nfunction loadRocket(scene: Scene) {\n    // The first parameter can be set to null to load all meshes and skeletons\n    SceneLoader.ImportMesh('10475_Rocket_Ship_v1_L3', RocketModelUrl, RocketFile, scene,\n        (meshes: AbstractMesh[], particles: IParticleSystem[], skeletons: Skeleton[]) => {\n            onRocketLoad(scene, meshes[0]);\n        });\n}\n\n/**\n * \n * @param scene \n * @param rocket \n */\nfunction onRocketLoad(scene: Scene, rocket: AbstractMesh) {\n    const camera1 = scene.getCameraByName('camera1') as (FollowCamera | null);\n    const camera2 = scene.getCameraByName('camera2') as (UniversalCamera | null);\n    if (camera1 && camera2) {\n        rocket.name = 'rocket';\n        camera1.lockedTarget = rocket;\n        camera2.lockedTarget = rocket;\n    }\n}\n\nfunction buildSkybox(scene: Scene) {\n    const skybox = MeshBuilder.CreateBox(\"skyBox\", { size: 1200 }, scene);\n    const skyboxMaterial = new StandardMaterial(\"skyBox\", scene);\n    skyboxMaterial.backFaceCulling = false;\n    skyboxMaterial.reflectionTexture = new CubeTexture(SkyBoxUrl, scene);\n    skyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\n    skyboxMaterial.diffuseColor = new Color3(0, 0, 0);\n    skyboxMaterial.specularColor = new Color3(0, 0, 0);\n    skybox.material = skyboxMaterial;\n    return skybox;\n}\n\n/**\n * \n * @param scene \n */\nfunction buildGround(scene: Scene) {\n    // Texture\n    const groundMat = new StandardMaterial(\"groundMat\", scene);\n    groundMat.diffuseTexture = new Texture(MoonTextureUrl, scene);\n\n    // Our built-in 'ground' shape.\n    const ground = MeshBuilder.CreateGround(\"ground\", { width: 1000, height: 1000, subdivisions: 2 }, scene);\n    ground.material = groundMat;\n    ground.position.y = -0.01;\n    // ground.receiveShadows = true;\n    return ground;\n}\n\n/**\n * \n * @param scene \n */\nfunction buildHud(scene: Scene) {\n    const advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"GUI\", undefined, scene);\n    const text1 = new TextBlock(\"HUD\");\n    text1.color = \"white\";\n    text1.width = \"250px\";\n    text1.height = \"100px\";\n    text1.fontFamily = 'monospace';\n    text1.fontSize = 20;\n    text1.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    text1.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    text1.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    text1.paddingLeftInPixels = 10;\n    advancedTexture.addControl(text1);\n\n    const advancedTexture1 = AdvancedDynamicTexture.CreateFullscreenUI(\"GUI\", undefined, scene);\n    const text2 = new TextBlock('HUD1');\n    text2.width = '400px';\n    text2.height = '50px';\n    text2.fontWeight = 'bold';\n    text2.fontSize = '28';\n    text2.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n    text2.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n    advancedTexture1.addControl(text2);\n    return [text1, text2];\n}\n\n/**\n * \n * @param scene \n */\nfunction buildPlatform(scene: Scene) {\n    // Texture\n    const platMat = new StandardMaterial(\"platMat\", scene);\n    platMat.diffuseTexture = new Texture(PlatformTextureUrl, scene);\n\n    // Our built-in 'ground' shape.\n    const platform = MeshBuilder.CreateGround(\"platform\", {\n        width: PlatformSize * PlatformRatio,\n        height: PlatformSize * PlatformRatio,\n        subdivisions: 2\n    }, scene);\n    platform.material = platMat;\n    platform.receiveShadows = true;\n    return platform;\n}\n\n/**\n * \n * @param scene \n */\nfunction buildLights(scene: Scene) {\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    const light = new HemisphericLight(\"light\", new Vector3(1, 1, 0), scene);\n    // Default intensity is 1. Let's dim the light a small amount\n    light.intensity = 1;\n    return light;\n}\n\n/**\n * \n * @param scene \n */\nfunction onSceneReady(scene: Scene) {\n    const camera = createCamera1(scene);\n    const camera2 = createCamera2(scene);\n    camera.viewport = new Viewport(0, 0, 0.5, 1.0);\n    camera2.viewport = new Viewport(0.5, 0, 0.5, 1.0);\n\n    scene.activeCameras?.push(camera);\n    scene.activeCameras?.push(camera2);\n\n    huds = buildHud(scene);\n    buildLights(scene);\n    buildGround(scene);\n    buildPlatform(scene);\n    buildSkybox(scene);\n    loadRocket(scene);\n}\n\nfunction renderHud(huds: TextBlock[] | undefined, status: Status) {\n    if (!!huds) {\n        const position = status.position;\n        const d = Math.sqrt(position.x * position.x + position.z * position.z);\n        const dirpn = 180 * Math.atan2(position.x, position.z) / Math.PI;\n        const dir = Math.round(dirpn > 0 ? dirpn : dirpn + 360);\n\n        const speed = status.speed;\n        const vh = Math.sqrt(speed.x * speed.x + speed.z * speed.z);\n        const vdirpn = 180 * Math.atan2(speed.x, speed.z) / Math.PI;\n        const vdir = Math.round(vdirpn > 0 ? vdirpn : vdirpn + 360);\n        const txt = sprintf('Pos   %05.1f %03d %05.1f\\nSpeed %03.1f %03d %+03.1f\\nFuel  %05.1f',\n            d, dir, position.y,\n            vh, vdir, speed.y,\n            status.fuel);\n        huds[0].text = txt;\n\n        huds[1].text = StatusDescr[status.status];\n        huds[1].color = StatusColor[status.status];\n    }\n    return huds;\n}\n\n/**\n * \n * @param scene \n */\nfunction onRender(scene: Scene) {\n    const rocket = scene.getMeshByName('rocket');\n    if (rocket && timeline) {\n        const dt1 = scene.getEngine().getDeltaTime() / 1000;\n        time = time + dt1;\n        const status = timeline.status(time);\n        rocket.position = status.position;\n        renderHud(huds, status);\n    }\n}\n\n/**\n * \n * @returns \n */\nfunction toStatus() {\n    return map((data: number[]) => {\n        return {\n            position: new Vector3(data[0], data[2], data[1]),\n            speed: new Vector3(data[3], data[5], data[4]),\n            fuel: data[6],\n            status: data[8]\n        };\n    });\n}\n\nfunction positionVectors() {\n    return (obs: Observable<string>) => obs.pipe(\n        lines(),\n        filter(text => !!text),\n        csv(),\n        toStatus(),\n        toArray()\n    );\n}\n\n/**\n * \n */\nexport class Home extends Component<{}, {\n    importModalShown: boolean;\n    timeline?: Timeline;\n}>{\n\n    /**\n     * \n     * @param props \n     */\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            importModalShown: false\n        };\n    }\n\n    componentDidMount() {\n        const obs = ajax({\n            url: SampleUrl,\n            responseType: 'text'\n        }).pipe(\n            map(data => data.response),\n        );\n        this.importFile(obs);\n\n    }\n\n    /**\n     * \n     */\n    private showImportPanel() {\n        this.setState({ importModalShown: true });\n    }\n\n    /**\n     * \n     */\n    private onImportCancel() {\n        this.setState({ importModalShown: false });\n    }\n\n    private importFile(data: Observable<string>) {\n        data.pipe(\n            positionVectors(),\n            tap(\n                data => this.onPathReady(data),\n                err => this.onImportError(err)\n            )\n        ).subscribe();\n    }\n\n    /**\n     * \n     * @param data \n     */\n    private onImportFile(data: Observable<string>) {\n        this.setState({ importModalShown: false });\n        this.importFile(data);\n    }\n\n    private onPathReady(path: Status[]) {\n        timeline = createTimeline(path);\n    }\n\n    /**\n     * \n     * @param error \n     */\n    private onImportError(error: any) {\n        console.error(error);\n    }\n\n    render() {\n        const { importModalShown } = this.state;\n        return (\n            <Container fluid>\n                <MenuBar\n                    onImport={() => this.showImportPanel()}\n                    onReplay={() => { time = 0; }}\n                />\n                <Container fluid>\n                    <SceneComponent antialias\n                        width={1400}\n                        height={640}\n                        onSceneReady={onSceneReady}\n                        onRender={scene => { onRender(scene) }}\n                        id='rocket-canvas' />\n                </Container>\n                <ImportFile show={importModalShown}\n                    onCancel={() => { this.onImportCancel() }}\n                    onSelect={obs => this.onImportFile(obs)} />\n            </Container>\n        );\n    }\n}\n","import { from } from \"rxjs\";\nimport { flatMap, map } from \"rxjs/operators\";\nimport { Vector3 } from \"@babylonjs/core\";\n\n/**\n * \n * @param line \n */\nexport function vector3(offset: number) {\n    return map((data: number[]) => new Vector3(data[offset], data[offset + 2], data[offset + 1]));\n}\n\n/**\n * \n * @param offsets \n * @returns \n */\nexport function vectors3(offsets: number[]) {\n    return map((data: number[]) =>\n        offsets.map(i =>\n            new Vector3(data[i], data[i + 2], data[i + 1])\n        )\n    );\n}\n\n/**\n * \n */\nexport function csv() {\n    return map((line: string) => line.split(',').map(parseFloat));\n}\n\n/**\n * \n */\nexport function lines() {\n    return flatMap((text: string) => from(text.split(/\\r\\n|\\n/)))\n}\n","import './App.css';\nimport { Home } from './modules/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}